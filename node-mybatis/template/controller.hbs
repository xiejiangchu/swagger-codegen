package {{package}}.controller;


import {{package}}.bean.{{camelCase tableInfo.tableName}};
import {{package}}.service.{{camelCase tableInfo.tableName}}Service;
import {{package}}.bean.BaseResponse;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.*;
import org.springframework.stereotype.Controller;
import org.springframework.beans.factory.annotation.Autowired;

import java.util.List;



/**
 * Created by xie
 */
@RestController
@RequestMapping("/api/{{camelCaseLowerFirst tableInfo.tableName}}")
public class {{camelCase tableInfo.tableName}}Controller {

	@Autowired
    private {{camelCase tableInfo.tableName}}Service {{camelCaseLowerFirst tableInfo.tableName}}Service;

	/**
	* 根据id获取{{tableInfo.comments}}信息详情
	*/
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	@ApiOperation(value = "根据id获取{{tableInfo.comments}}详情", response = {{camelCase tableInfo.tableName}}.class)
	BaseResponse<{{camelCase tableInfo.tableName}}> selectByPrimaryKeyFor{{camelCase tableInfo.tableName}}(@PathVariable("id") Integer id){
		return BaseResponse.ok({{camelCaseLowerFirst tableInfo.tableName}}Service.selectByPrimaryKey(id));
	}

	/**
	* 根据id批量获取{{tableInfo.comments}}信息详情
	*/
	@RequestMapping(value = "/selectByPrimaryKeys", method = RequestMethod.GET)
	@ApiOperation(value = "根据id批量获取{{tableInfo.comments}}详情", response = {{camelCase tableInfo.tableName}}.class)
	BaseResponse<List<{{camelCase tableInfo.tableName}}>> selectByPrimaryKeysFor{{camelCase tableInfo.tableName}}(@RequestParam("ids") List<Integer> ids){
		return BaseResponse.ok({{camelCaseLowerFirst tableInfo.tableName}}Service.selectByPrimaryKeys(ids));
	}


	/**
	* 获取{{tableInfo.comments}}总记录数
	*/
	@RequestMapping(value = "/count", method = RequestMethod.GET)
	@ApiOperation(value = "获取{{tableInfo.comments}}总记录数", response = Integer.class)
	BaseResponse countFor{{camelCase tableInfo.tableName}}(){
		return BaseResponse.ok({{camelCaseLowerFirst tableInfo.tableName}}Service.count());
	}

	/**
	* 插入{{tableInfo.comments}}记录
	*/
	@RequestMapping(value = "/", method = RequestMethod.POST)
	@ApiOperation(value = "插入{{tableInfo.comments}}记录", response = Integer.class)
	BaseResponse<{{camelCase tableInfo.tableName}}> insertFor{{camelCase tableInfo.tableName}}({{camelCase tableInfo.tableName}} record){
		return BaseResponse.ok({{camelCaseLowerFirst tableInfo.tableName}}Service.insert(record));
	}

	/**
	* 根据部分字段插入{{tableInfo.comments}}记录
	*/
	@RequestMapping(value = "/insertSelective", method = RequestMethod.POST)
	@ApiOperation(value = "根据部分字段插入{{tableInfo.comments}}记录", response = Integer.class)
	BaseResponse<{{camelCase tableInfo.tableName}}> insertSelectiveFor{{camelCase tableInfo.tableName}}({{camelCase tableInfo.tableName}} record){
		return BaseResponse.ok({{camelCaseLowerFirst tableInfo.tableName}}Service.insertSelective(record));
	}

	/**
	* 更新{{tableInfo.comments}}记录
	*/
	@RequestMapping(value = "/", method = RequestMethod.PUT)
	@ApiOperation(value = "更新{{tableInfo.comments}}记录", response = Integer.class)
	BaseResponse updateFor{{camelCase tableInfo.tableName}}({{camelCase tableInfo.tableName}} record){
		return BaseResponse.ok({{camelCaseLowerFirst tableInfo.tableName}}Service.update(record));
	}

	/**
	* 根据部分字段更新{{tableInfo.comments}}记录
	*/
	@RequestMapping(value = "/updateByPrimaryKeySelective", method = RequestMethod.PUT)
	@ApiOperation(value = "根据部分字段更新{{tableInfo.comments}}记录", response = Integer.class)
	BaseResponse updateByPrimaryKeySelectiveFor{{camelCase tableInfo.tableName}}({{camelCase tableInfo.tableName}} record){
		return BaseResponse.ok({{camelCaseLowerFirst tableInfo.tableName}}Service.updateByPrimaryKeySelective(record));
	}

	/**
	* 根据主键更新{{tableInfo.comments}}记录
	*/
	@RequestMapping(value = "/updateByPrimaryKey", method = RequestMethod.GET)
	@ApiOperation(value = "根据主键更新{{tableInfo.comments}}记录", response = Integer.class)
	BaseResponse updateByPrimaryKeyFor{{camelCase tableInfo.tableName}}({{camelCase tableInfo.tableName}} record){
		return BaseResponse.ok({{camelCaseLowerFirst tableInfo.tableName}}Service.updateByPrimaryKey(record));
	}

	/**
	* 根据主键删除{{tableInfo.comments}}记录
	*/
	@RequestMapping(value = "/{id}", method = RequestMethod.DELETE)
	@ApiOperation(value = "根据主键删除{{tableInfo.comments}}记录", response = Integer.class)
	BaseResponse deleteByPrimaryKeyFor{{camelCase tableInfo.tableName}}(@PathVariable("id") Integer id){
		return BaseResponse.ok({{camelCaseLowerFirst tableInfo.tableName}}Service.deleteByPrimaryKey(id));
	}

	/**
	* 删除所有{{tableInfo.comments}}记录
	*/
	@RequestMapping(value = "/deleteAll", method = RequestMethod.DELETE)
	@ApiOperation(value = "删除所有{{tableInfo.comments}}记录", response = Integer.class)
	BaseResponse deleteAllFor{{camelCase tableInfo.tableName}}(){
		return BaseResponse.ok({{camelCaseLowerFirst tableInfo.tableName}}Service.deleteAll());
	}
}