package {{package}}.service.impl;

import java.util.List;
import {{package}}.bean.{{camelCase tableInfo.tableName}};
import {{package}}.service.{{camelCase tableInfo.tableName}}Service;
import {{package}}.mapper.{{camelCase tableInfo.tableName}}Mapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * Created by xie
 */
@Service
public class {{camelCase tableInfo.tableName}}ServiceImpl implements {{camelCase tableInfo.tableName}}Service {

	@Autowired
    private {{camelCase tableInfo.tableName}}Mapper {{camelCaseLowerFirst tableInfo.tableName}}Mapper;

	@Override
	public {{camelCase tableInfo.tableName}} selectById(Integer id){
		return {{camelCaseLowerFirst tableInfo.tableName}}Mapper.selectByPrimaryKey(id);
	}

	@Override
	public List<{{camelCase tableInfo.tableName}}> selectByIds(List<Integer> ids){
		return {{camelCaseLowerFirst tableInfo.tableName}}Mapper.selectByPrimaryKeys(ids);
	}

	@Override
	public int count(){
		return {{camelCaseLowerFirst tableInfo.tableName}}Mapper.count();
	}

	@Override
	public {{camelCase tableInfo.tableName}} insert({{camelCase tableInfo.tableName}} record){
		{{camelCaseLowerFirst tableInfo.tableName}}Mapper.insert(record);
		return record;
	}

	@Override
	public insert({{functionParam cols}}){
		{{camelCase tableInfo.tableName}} {{camelCaseLowerFirst tableInfo.tableName}} = new {{camelCase tableInfo.tableName}}();
		{{#cols}}
		{{camelCaseLowerFirst ../tableInfo.tableName}}.set{{camelCase columnName}}({{camelCaseLowerFirst columnName}});
		{{/cols}}
		{{camelCaseLowerFirst tableInfo.tableName}}Mapper.insertSelective({{camelCaseLowerFirst tableInfo.tableName}});
		return record;
	}

	@Override
	public int update({{camelCase tableInfo.tableName}} record){
		return {{camelCaseLowerFirst tableInfo.tableName}}Mapper.updateById(record);
	}

	@Override
	public update({{functionParam cols}}){
		{{camelCase tableInfo.tableName}} {{camelCaseLowerFirst tableInfo.tableName}} = new {{camelCase tableInfo.tableName}}();
		{{#cols}}
		{{camelCaseLowerFirst ../tableInfo.tableName}}.set{{camelCase columnName}}({{camelCaseLowerFirst columnName}});
		{{/cols}}
		{{camelCaseLowerFirst tableInfo.tableName}}Mapper.updateById({{camelCaseLowerFirst tableInfo.tableName}});
		return record;
	}

	@Override
	public int deleteById(Integer id){
		return {{camelCaseLowerFirst tableInfo.tableName}}Mapper.deleteByPrimaryKey(id);
	}

	@Override
	public int deleteAll(){
		return {{camelCaseLowerFirst tableInfo.tableName}}Mapper.deleteAll();
	}
}